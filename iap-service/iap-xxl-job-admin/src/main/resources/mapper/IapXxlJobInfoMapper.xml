<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.mapper.IapXxlJobInfoDao">

    <resultMap id="IapXxlJobInfo" type="com.xxl.job.admin.core.model.IapXxlJobInfo">
        <result column="id" property="id"/>

        <result column="job_group" property="jobGroup"/>
        <result column="job_cron" property="jobCron"/>
        <result column="job_desc" property="jobDesc"/>

        <result column="add_time" property="addTime"/>
        <result column="update_time" property="updateTime"/>

        <result column="author" property="author"/>
        <result column="alarm_email" property="alarmEmail"/>

        <result column="executor_route_strategy" property="executorRouteStrategy"/>
        <result column="executor_handler" property="executorHandler"/>
        <result column="executor_param" property="executorParam"/>
        <result column="executor_block_strategy" property="executorBlockStrategy"/>
        <result column="executor_timeout" property="executorTimeout"/>
        <result column="executor_fail_retry_count" property="executorFailRetryCount"/>

        <result column="glue_type" property="glueType"/>
        <result column="glue_source" property="glueSource"/>
        <result column="glue_remark" property="glueRemark"/>
        <result column="glue_update_time" property="glueUpdateTime"/>

        <result column="child_job_id" property="childJobId"/>

        <result column="trigger_status" property="triggerStatus"/>
        <result column="trigger_last_time" property="triggerLastTime"/>
        <result column="trigger_next_time" property="triggerNextTime"/>
    </resultMap>

    <sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_cron,
		t.job_desc,
		t.add_time,
		t.update_time,
		t.author,
		t.alarm_email,
		t.executor_route_strategy,
		t.executor_handler,
		t.executor_param,
		t.executor_block_strategy,
		t.executor_timeout,
		t.executor_fail_retry_count,
		t.glue_type,
		t.glue_source,
		t.glue_remark,
		t.glue_update_time,
		t.child_job_id,
		t.trigger_status,
		t.trigger_last_time,
		t.trigger_next_time
	</sql>

    <!-- 分页查询 -->
    <select id="pageList" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo" databaseId="ms-sql">
        SELECT top ${pagesize}
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE id not IN (
        SELECT top ${offset} m.id
        FROM xxl_job_info m
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND m.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND m.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND m.job_desc like '%${jobDesc}%'
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND m.executor_handler like '%${executorHandler}%'
            </if>
            <if test="author != null and author != ''">
                AND m.author like '%${author}%'
            </if>
        </trim>
        ORDER BY m.id DESC
        )

        <if test="jobGroup gt 0">
            AND t.job_group = #{jobGroup}
        </if>
        <if test="triggerStatus gte 0">
            AND t.trigger_status = #{triggerStatus}
        </if>
        <if test="jobDesc != null and jobDesc != ''">
            AND t.job_desc like '%${jobDesc}%'
        </if>
        <if test="executorHandler != null and executorHandler != ''">
            AND t.executor_handler like '%${executorHandler}%'
        </if>
        <if test="author != null and author != ''">
            AND t.author like '%${author}%'
        </if>

        ORDER BY t.id DESC
    </select>


    <!-- 分页查询 -->
    <select id="pageList" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo" databaseId="oracle">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE 1=1
        <if test="offset gt 0">
            and id not IN (
            SELECT m.id
            FROM xxl_job_info m
            where 1=1
            <if test="jobGroup gt 0">
                AND m.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND m.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND m.job_desc like '%${jobDesc}%'
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND m.executor_handler like '%${executorHandler}%'
            </if>
            <if test="author != null and author != ''">
                AND m.author like '%${author}%'
            </if>
            AND ROWNUM <![CDATA[ <= ]]>  ${offset}
            ORDER BY m.id DESC
            )
        </if>
        <if test="jobGroup gt 0">
            AND t.job_group = #{jobGroup}
        </if>
        <if test="triggerStatus gte 0">
            AND t.trigger_status = #{triggerStatus}
        </if>
        <if test="jobDesc != null and jobDesc != ''">
            AND t.job_desc like '%${jobDesc}%'
        </if>
        <if test="executorHandler != null and executorHandler != ''">
            AND t.executor_handler like '%${executorHandler}%'
        </if>
        <if test="author != null and author != ''">
            AND t.author like '%${author}%'
        </if>
        AND ROWNUM <![CDATA[ <= ]]>   ${pagesize}
        ORDER BY t.id DESC
    </select>
    <!-- 查询总页数 -->
    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM xxl_job_info t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like '%${jobDesc}%'
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like '%${executorHandler}%'
            </if>
            <if test="author != null and author != ''">
                AND t.author like '%${author}%'
            </if>
        </trim>
    </select>

    <!-- 保存 XxlJobInfo -->
    <insert id="save" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" useGeneratedKeys="true"
            keyProperty="id" databaseId="ms-sql">
        INSERT INTO xxl_job_info (
        job_group,
        job_cron,
        job_desc,
        add_time,
        update_time,
        author,
        alarm_email,
        executor_route_strategy,
        executor_handler,
        executor_param,
        executor_block_strategy,
        executor_timeout,
        executor_fail_retry_count,
        glue_type,
        glue_source,
        glue_remark,
        glue_update_time,
        child_job_id,
        trigger_status,
        trigger_last_time,
        trigger_next_time
        ) VALUES (
        #{jobGroup},
        #{jobCron},
        #{jobDesc},
        #{addTime},
        #{updateTime},
        #{author},
        #{alarmEmail},
        #{executorRouteStrategy},
        #{executorHandler},
        #{executorParam},
        #{executorBlockStrategy},
        #{executorTimeout},
        #{executorFailRetryCount},
        #{glueType},
        #{glueSource},
        #{glueRemark},
        #{glueUpdateTime},
        #{childJobId},
        #{triggerStatus},
        #{triggerLastTime},
        #{triggerNextTime}
        );
    </insert>

    <!-- 保存 XxlJobInfo -->
    <insert id="save" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" databaseId="oracle">
     insert into XXL_JOB_INFO (id,JOB_GROUP, JOB_CRON, JOB_DESC,
      ADD_TIME, UPDATE_TIME, AUTHOR,
      ALARM_EMAIL, EXECUTOR_ROUTE_STRATEGY, EXECUTOR_HANDLER,
      EXECUTOR_PARAM, EXECUTOR_BLOCK_STRATEGY, EXECUTOR_TIMEOUT,
      EXECUTOR_FAIL_RETRY_COUNT, GLUE_TYPE, GLUE_REMARK,
      GLUE_UPDATE_TIME, CHILD_JOB_ID, TRIGGER_STATUS,
      TRIGGER_LAST_TIME, TRIGGER_NEXT_TIME, GLUE_SOURCE
      )
    values (#{id,jdbcType=DECIMAL},#{jobGroup,jdbcType=DECIMAL}, #{jobCron,jdbcType=VARCHAR}, #{jobDesc,jdbcType=VARCHAR},
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{author,jdbcType=VARCHAR},
      #{alarmEmail,jdbcType=VARCHAR}, #{executorRouteStrategy,jdbcType=VARCHAR}, #{executorHandler,jdbcType=VARCHAR},
      #{executorParam,jdbcType=VARCHAR}, #{executorBlockStrategy,jdbcType=VARCHAR}, #{executorTimeout,jdbcType=DECIMAL},
      #{executorFailRetryCount,jdbcType=DECIMAL}, #{glueType,jdbcType=VARCHAR}, #{glueRemark,jdbcType=VARCHAR},
      #{glueUpdateTime,jdbcType=TIMESTAMP}, #{childJobId,jdbcType=VARCHAR}, #{triggerStatus,jdbcType=DECIMAL},
      #{triggerLastTime,jdbcType=DECIMAL}, #{triggerNextTime,jdbcType=DECIMAL}, #{glueSource,jdbcType=CLOB}
      )

    </insert>

    <!-- 根据 XxlJobInfo的id 查询 XxlJobInfo -->
    <select id="loadById" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.id = #{id}
    </select>

    <!-- 查询所有 XxlJobInfo -->
    <select id="loadByAll" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE 1=1
    </select>

    <!-- 更新 XxlJobInfo -->
    <update id="update" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" databaseId="ms-sql">
		UPDATE xxl_job_info
		SET
			job_group = #{jobGroup},
			job_cron = #{jobCron},
			job_desc = #{jobDesc},
			update_time = #{updateTime},
			author = #{author},
			alarm_email = #{alarmEmail},
			executor_route_strategy = #{executorRouteStrategy},
			executor_handler = #{executorHandler},
			executor_param = #{executorParam},
			executor_block_strategy = #{executorBlockStrategy},
			executor_timeout = ${executorTimeout},
			executor_fail_retry_count = ${executorFailRetryCount},
			glue_type = #{glueType},
			glue_source = #{glueSource},
			glue_remark = #{glueRemark},
			glue_update_time = #{glueUpdateTime},
			child_jobid = #{childJobId},
			trigger_status = #{triggerStatus},
			trigger_last_time = #{triggerLastTime},
			trigger_next_time = #{triggerNextTime}
		WHERE id = #{id}
	</update>
    <!-- 更新 XxlJobInfo -->
    <update id="update" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" databaseId="oracle">
		UPDATE xxl_job_info
		SET
			job_group = #{jobGroup,jdbcType=INTEGER},
			job_cron = #{jobCron,jdbcType=VARCHAR},
			job_desc = #{jobDesc,jdbcType=VARCHAR},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			author = #{author,jdbcType=VARCHAR},
			alarm_email = #{alarmEmail,jdbcType=VARCHAR},
			executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
			executor_handler = #{executorHandler,jdbcType=VARCHAR},
			executor_param = #{executorParam,jdbcType=VARCHAR},
			executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
			executor_timeout = ${executorTimeout,jdbcType=INTEGER},
			executor_fail_retry_count = ${executorFailRetryCount,jdbcType=INTEGER},
			glue_type = #{glueType,jdbcType=VARCHAR},
			glue_source = #{glueSource,jdbcType=VARCHAR},
			glue_remark = #{glueRemark,jdbcType=VARCHAR},
			glue_update_time = #{glueUpdateTime,jdbcType=TIMESTAMP},
			child_jobid = #{childJobId,jdbcType=VARCHAR},
			trigger_status = #{triggerStatus,jdbcType=INTEGER},
			trigger_last_time = #{triggerLastTime,jdbcType=BIGINT},
			trigger_next_time = #{triggerNextTime,jdbcType=BIGINT}
		WHERE id = #{id,jdbcType=INTEGER}
	</update>
    <!-- 根据 xxlJobInfo的id删除 -->
    <delete id="remove" parameterType="java.util.HashMap">
		DELETE
		FROM xxl_job_info
		WHERE id = #{id}
	</delete>

    <!-- 通过 jobGroup 查询 XxlJobInfo列表 -->
    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.job_group = #{jobGroup}
    </select>

    <!-- 查询所有 XxlJobInfo 的总数 -->
    <select id="findAllCount" resultType="int">
		SELECT count(1)
		FROM xxl_job_info
	</select>

    <!-- 查询调度状态为正在运行（trigger_status = 1）且下次调度时间(trigger_next_time)小于 maxNextTime 的 XxlJobInfo -->
    <select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo" databaseId="ms-sql">
        SELECT
        top ${pagesize}
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.trigger_status = 1
        and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
        ORDER BY id ASC
        <!-- LIMIT #{pagesize} -->

    </select>

    <!-- 查询调度状态为正在运行（trigger_status = 1）且下次调度时间(trigger_next_time)小于 maxNextTime 的 XxlJobInfo -->
    <select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="IapXxlJobInfo" databaseId="oracle">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.trigger_status = 1
        and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
        AND ROWNUM <![CDATA[ <= ]]> ${pagesize}
        ORDER BY id ASC
        <!-- LIMIT #{pagesize} -->

    </select>

    <!-- 更新 XxlJobInfo -->
    <update id="scheduleUpdate" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" databaseId="ms-sql">
		UPDATE xxl_job_info
		SET
			trigger_last_time = #{triggerLastTime},
			trigger_next_time = #{triggerNextTime},
			trigger_status = #{triggerStatus}
		WHERE id = #{id}
	</update>
    <!-- 更新 XxlJobInfo -->
    <update id="scheduleUpdate" parameterType="com.xxl.job.admin.core.model.IapXxlJobInfo" databaseId="oracle">
		UPDATE xxl_job_info
		SET
			trigger_last_time = #{triggerLastTime,jdbcType=BIGINT},
			trigger_next_time = #{triggerNextTime,jdbcType=BIGINT},
			trigger_status = #{triggerStatus,jdbcType=INTEGER}
		WHERE id = #{id,jdbcType=INTEGER}
	</update>
</mapper>