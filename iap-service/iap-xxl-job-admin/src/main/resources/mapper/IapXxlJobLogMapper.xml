<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.mapper.IapXxlJobLogDao">

	<resultMap id="IapXxlJobLog" type="com.xxl.job.admin.core.model.IapXxlJobLog" >
		<result column="id" property="id" />

		<result column="job_group" property="jobGroup" />
		<result column="job_id" property="jobId" />

		<result column="executor_address" property="executorAddress" />
		<result column="executor_handler" property="executorHandler" />
		<result column="executor_param" property="executorParam" />
		<result column="executor_sharding_param" property="executorShardingParam" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" />

		<result column="trigger_time" property="triggerTime" />
		<result column="trigger_code" property="triggerCode" />
		<result column="trigger_msg" property="triggerMsg" />

		<result column="handle_time" property="handleTime" />
		<result column="handle_code" property="handleCode" />
		<result column="handle_msg" property="handleMsg" />

		<result column="alarm_status" property="alarmStatus" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_id,
		t.executor_address,
		t.executor_handler,
		t.executor_param,
		t.executor_sharding_param,
		t.executor_fail_retry_count,
		t.trigger_time,
		t.trigger_code,
		t.trigger_msg,
		t.handle_time,
		t.handle_code,
		t.handle_msg,
		t.alarm_status
	</sql>

	<select id="pageList" resultMap="IapXxlJobLog" databaseId="ms-sql">
		SELECT top ${pagesize}
		<include refid="Base_Column_List" />
		FROM xxl_job_log  t
		WHERE
		ID not IN (
		SELECT top ${offset} m.ID
		FROM xxl_job_log  m
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND m.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND m.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND m.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND m.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND m.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				m.trigger_code NOT IN (0, 200) OR
				m.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND m.trigger_code = 200
				AND m.handle_code = 0
			</if>
		</trim>
		ORDER BY m.trigger_time DESC
		)
		<trim prefix="AND" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				t.trigger_code NOT IN (0, 200) OR
				t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		ORDER BY t.trigger_time DESC
		<!-- LIMIT #{offset}, #{pagesize} -->

	</select>
	<select id="pageList" resultMap="IapXxlJobLog" databaseId="oracle">
		SELECT
		<include refid="Base_Column_List" />
		FROM xxl_job_log  t
		WHERE
		<if test="offset gt 0">
		ID not IN (
		SELECT  m.ID
		FROM xxl_job_log  m
        where  1=1
			<if test="jobId==0 and jobGroup gt 0">
				AND m.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND m.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND m.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND m.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND m.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				m.trigger_code NOT IN (0, 200) OR
				m.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND m.trigger_code = 200
				AND m.handle_code = 0
			</if>
		AND ROWNUM <![CDATA[ <= ]]> ${offset}
		ORDER BY m.trigger_time DESC
		)
		</if>
		<trim prefix="AND" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				t.trigger_code NOT IN (0, 200) OR
				t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		AND ROWNUM <![CDATA[ <= ]]> ${pagesize}
		ORDER BY t.trigger_time DESC
		<!-- LIMIT #{offset}, #{pagesize} -->

	</select>
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM xxl_job_log  t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				t.trigger_code NOT IN (0, 200) OR
				t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
	</select>

	<select id="load" parameterType="java.lang.Long" resultMap="IapXxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_log  t
		WHERE t.id = #{id}
	</select>


	<insert id="save" parameterType="com.xxl.job.admin.core.model.IapXxlJobLog" useGeneratedKeys="true" keyProperty="id" databaseId="ms-sql">
		INSERT INTO xxl_job_log (
		job_group,
		job_id,
		trigger_time,
		trigger_code,
		handle_code
		) VALUES (
		#{jobGroup},
		#{jobId},
		#{triggerTime},
		#{triggerCode},
		#{handleCode}
		);
	</insert>


	<insert id="save" parameterType="com.xxl.job.admin.core.model.IapXxlJobLog" useGeneratedKeys="true" keyProperty="id" databaseId="oracle">
		INSERT INTO xxl_job_log (
		job_group,
		job_id,
		trigger_time,
		trigger_code,
		handle_code
		) VALUES (
		#{jobGroup,jdbcType=INTEGER},
		#{jobId,jdbcType=INTEGER},
		#{triggerTime,jdbcType=TIMESTAMP},
		#{triggerCode,jdbcType=INTEGER},
		#{handleCode,jdbcType=INTEGER}
		);
	</insert>

	<update id="updateTriggerInfo" databaseId="ms-sql" >
		UPDATE xxl_job_log
		SET
			trigger_time= #{triggerTime},
			trigger_code= #{triggerCode},
			trigger_msg= #{triggerMsg},
			executor_address= #{executorAddress},
			executor_handler=#{executorHandler},
			executor_param= #{executorParam},
			executor_sharding_param= #{executorShardingParam},
			executor_fail_retry_count= #{executorFailRetryCount}
		WHERE id= #{id}
	</update>

	<update id="updateTriggerInfo" databaseId="oracle" >
		UPDATE xxl_job_log
		SET
			trigger_time= #{triggerTime,jdbcType=TIMESTAMP},
			trigger_code= #{triggerCode,jdbcType=INTEGER},
			trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
			executor_address= #{executorAddress,jdbcType=VARCHAR},
			executor_handler=#{executorHandler,jdbcType=VARCHAR},
			executor_param= #{executorParam,jdbcType=VARCHAR},
			executor_sharding_param= #{executorShardingParam,jdbcType=VARCHAR},
			executor_fail_retry_count= #{executorFailRetryCount,jdbcType=INTEGER}
		WHERE id= #{id,jdbcType=BIGINT}
	</update>
	<update id="updateHandleInfo"  databaseId="ms-sql">
		UPDATE xxl_job_log
		SET
			handle_time= #{handleTime},
			handle_code= #{handleCode},
			handle_msg= #{handleMsg}
		WHERE id= #{id}
	</update>

	<update id="updateHandleInfo" databaseId="oracle">
		UPDATE xxl_job_log
		SET
			handle_time= #{handleTime,jdbcType=TIMESTAMP},
			handle_code= #{handleCode,jdbcType=INTEGER},
			handle_msg= #{handleMsg,jdbcType=VARCHAR}
		WHERE id= #{id,jdbcType=BIGINT}
	</update>
	<delete id="remove" >
		delete from xxl_job_log
		WHERE job_id = #{jobId}
	</delete>



	<select id="findLogReport" resultType="java.util.Map" >
		SELECT
			COUNT(handle_code) triggerDayCount,
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) as triggerDayCountRunning,
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as triggerDayCountSuc
		FROM xxl_job_log
		WHERE trigger_time BETWEEN #{from} and #{to}
    </select>

	<select id="findClearLogIds" resultType="long" databaseId="ms-sql">
		SELECT top ${pagesize} id FROM xxl_job_log
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
				SELECT id FROM(
				SELECT top ${clearBeforeNum} id FROM iap_xxl_job_log AS t
				<trim prefix="WHERE" prefixOverrides="AND | OR" >
					<if test="jobGroup gt 0">
						AND t.job_group = #{jobGroup}
					</if>
					<if test="jobId gt 0">
						AND t.job_id = #{jobId}
					</if>
				</trim>
				ORDER BY t.trigger_time desc
				<!-- LIMIT 0, #{clearBeforeNum}-->

				) t1
				)
			</if>
		</trim>
		order by id asc
		<!--LIMIT #{pagesize} -->

	</select>


	<select id="findClearLogIds" resultType="long" databaseId="oracle" >
		SELECT   id FROM xxl_job_log
	      where 1=1
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
				SELECT id FROM(
				SELECT   id FROM iap_xxl_job_log  t
			     where 1=1
					<if test="jobGroup gt 0">
						AND t.job_group = #{jobGroup}
					</if>
					<if test="jobId gt 0">
						AND t.job_id = #{jobId}
					</if>
				AND ROWNUM <![CDATA[ <= ]]> ${clearBeforeNum}
				ORDER BY t.trigger_time desc
				<!-- LIMIT 0, #{clearBeforeNum}-->

				) t1
				)
			</if>
		AND ROWNUM <![CDATA[ <= ]]> ${pagesize}
		order by id asc
		<!--LIMIT #{pagesize} -->

	</select>

	<delete id="clearLog" >
		delete from xxl_job_log
		WHERE id in
		<foreach collection="logIds" item="item" open="(" close=")" separator="," >
			#{item}
		</foreach>
	</delete>

	<select id="findFailJobLogIds" resultType="long" databaseId="ms-sql">
		SELECT top ${pagesize} id FROM xxl_job_log
		WHERE (
		(trigger_code in (0, 200) and handle_code = 0)
		and
		(handle_code = 200)
		)
		AND alarm_status = 0
		ORDER BY id ASC
		<!-- LIMIT #{pagesize}-->

	</select>
	<select id="findFailJobLogIds" resultType="long" databaseId="oracle" >
		SELECT   id FROM xxl_job_log
		WHERE (
		(trigger_code in (0, 200) and handle_code = 0)
		and
		(handle_code = 200)
		)
		AND alarm_status = 0
		AND ROWNUM <![CDATA[ <= ]]> ${pagesize}
		ORDER BY id ASC
		<!-- LIMIT #{pagesize}-->

	</select>
	<update id="updateAlarmStatus" >
		UPDATE xxl_job_log
		SET
			alarm_status = #{newAlarmStatus}
		WHERE id= #{logId} AND alarm_status = #{oldAlarmStatus}
	</update>

	<select id="findLostJobIds" resultType="long" >
		SELECT t.id
		FROM xxl_job_log  t
		WHERE t.trigger_code = 200
			and t.handle_code = 0
			and t.trigger_time <![CDATA[ <= ]]> #{losedTime}
			and t.executor_address not in (
				SELECT t2.registry_value
				FROM iap_xxl_job_registry  t2
			)
	</select>

</mapper>
